// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v5.29.3
// source: monitor/status.proto

package monitor

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ThreadsDetail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThreadsStatus []uint32               `protobuf:"varint,1,rep,packed,name=threads_status,json=threadsStatus,proto3" json:"threads_status,omitempty"` //线程状态
	ThreadsCount  []uint64               `protobuf:"varint,2,rep,packed,name=threads_count,json=threadsCount,proto3" json:"threads_count,omitempty"`    //线程工作量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThreadsDetail) Reset() {
	*x = ThreadsDetail{}
	mi := &file_monitor_status_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThreadsDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadsDetail) ProtoMessage() {}

func (x *ThreadsDetail) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_status_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadsDetail.ProtoReflect.Descriptor instead.
func (*ThreadsDetail) Descriptor() ([]byte, []int) {
	return file_monitor_status_proto_rawDescGZIP(), []int{0}
}

func (x *ThreadsDetail) GetThreadsStatus() []uint32 {
	if x != nil {
		return x.ThreadsStatus
	}
	return nil
}

func (x *ThreadsDetail) GetThreadsCount() []uint64 {
	if x != nil {
		return x.ThreadsCount
	}
	return nil
}

// 定义线程池基本状态信息
type Status struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	TotalTask     uint64                 `protobuf:"varint,2,opt,name=total_task,json=totalTask,proto3" json:"total_task,omitempty"`       //总下发任务数
	TotalRetry    uint64                 `protobuf:"varint,3,opt,name=total_retry,json=totalRetry,proto3" json:"total_retry,omitempty"`    // 总重试任务数
	TotalResult   uint64                 `protobuf:"varint,4,opt,name=total_result,json=totalResult,proto3" json:"total_result,omitempty"` // 已完成任务总数
	RetrySize     uint64                 `protobuf:"varint,5,opt,name=retry_size,json=retrySize,proto3" json:"retry_size,omitempty"`       // 重试队列大小
	ThreadsDetail *ThreadsDetail         `protobuf:"bytes,6,opt,name=threads_detail,json=threadsDetail,proto3" json:"threads_detail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Status) Reset() {
	*x = Status{}
	mi := &file_monitor_status_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_status_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_monitor_status_proto_rawDescGZIP(), []int{1}
}

func (x *Status) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Status) GetTotalTask() uint64 {
	if x != nil {
		return x.TotalTask
	}
	return 0
}

func (x *Status) GetTotalRetry() uint64 {
	if x != nil {
		return x.TotalRetry
	}
	return 0
}

func (x *Status) GetTotalResult() uint64 {
	if x != nil {
		return x.TotalResult
	}
	return 0
}

func (x *Status) GetRetrySize() uint64 {
	if x != nil {
		return x.RetrySize
	}
	return 0
}

func (x *Status) GetThreadsDetail() *ThreadsDetail {
	if x != nil {
		return x.ThreadsDetail
	}
	return nil
}

type StreamStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Interval      int64                  `protobuf:"varint,1,opt,name=interval,proto3" json:"interval,omitempty"` // 数据推送间隔
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamStatusRequest) Reset() {
	*x = StreamStatusRequest{}
	mi := &file_monitor_status_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamStatusRequest) ProtoMessage() {}

func (x *StreamStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_status_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamStatusRequest.ProtoReflect.Descriptor instead.
func (*StreamStatusRequest) Descriptor() ([]byte, []int) {
	return file_monitor_status_proto_rawDescGZIP(), []int{2}
}

func (x *StreamStatusRequest) GetInterval() int64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

var File_monitor_status_proto protoreflect.FileDescriptor

var file_monitor_status_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x22,
	0x5b, 0x0a, 0x0d, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x25, 0x0a, 0x0e, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0c,
	0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xdd, 0x01, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x74, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x72, 0x65, 0x74, 0x72, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x3d, 0x0a,
	0x0e, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e,
	0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0d, 0x74,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x31, 0x0a, 0x13,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x32,
	0x51, 0x0a, 0x0e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1c, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0f, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x30, 0x01, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x3b, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_monitor_status_proto_rawDescOnce sync.Once
	file_monitor_status_proto_rawDescData = file_monitor_status_proto_rawDesc
)

func file_monitor_status_proto_rawDescGZIP() []byte {
	file_monitor_status_proto_rawDescOnce.Do(func() {
		file_monitor_status_proto_rawDescData = protoimpl.X.CompressGZIP(file_monitor_status_proto_rawDescData)
	})
	return file_monitor_status_proto_rawDescData
}

var file_monitor_status_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_monitor_status_proto_goTypes = []any{
	(*ThreadsDetail)(nil),       // 0: monitor.ThreadsDetail
	(*Status)(nil),              // 1: monitor.Status
	(*StreamStatusRequest)(nil), // 2: monitor.StreamStatusRequest
}
var file_monitor_status_proto_depIdxs = []int32{
	0, // 0: monitor.Status.threads_detail:type_name -> monitor.ThreadsDetail
	2, // 1: monitor.MonitorService.StreamStatus:input_type -> monitor.StreamStatusRequest
	1, // 2: monitor.MonitorService.StreamStatus:output_type -> monitor.Status
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_monitor_status_proto_init() }
func file_monitor_status_proto_init() {
	if File_monitor_status_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_monitor_status_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_monitor_status_proto_goTypes,
		DependencyIndexes: file_monitor_status_proto_depIdxs,
		MessageInfos:      file_monitor_status_proto_msgTypes,
	}.Build()
	File_monitor_status_proto = out.File
	file_monitor_status_proto_rawDesc = nil
	file_monitor_status_proto_goTypes = nil
	file_monitor_status_proto_depIdxs = nil
}
